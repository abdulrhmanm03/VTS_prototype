// "use client"

// import React, { useState } from "react"
// import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
// import { Button } from "@/components/ui/button"
// import { Input } from "@/components/ui/input"
// import { Label } from "@/components/ui/label"
// import { Badge } from "@/components/ui/badge"
// import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
// import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
// import { Checkbox } from "@/components/ui/checkbox"
// import { Building2, Users, Shield, CheckCircle2, ArrowRight, Upload, Network, Lock } from "lucide-react"

// export default function AccessGate() {
//   const [currentStep, setCurrentStep] = useState(1)
//   const [orgData, setOrgData] = useState({
//     name: "",
//     industry: "",
//     size: "",
//     region: "global",
//     domains: [] as string[],
//     ipRanges: [] as string[],
//     cloudProviders: [] as string[],
//     integrations: [] as string[],
//   })

//   const steps = [
//     { id: 1, name: "Organization Details", icon: Building2 },
//     { id: 2, name: "Asset Discovery", icon: Network },
//     { id: 3, name: "Security Integrations", icon: Shield },
//     { id: 4, name: "Team Setup", icon: Users },
//     { id: 5, name: "Review & Launch", icon: CheckCircle2 },
//   ]

//   const industries = [
//     "Financial Services",
//     "Healthcare",
//     "Technology",
//     "Energy & Utilities",
//     "Government",
//     "Retail",
//     "Manufacturing",
//     "Telecommunications",
//   ]

//   const integrations = [
//     { name: "Splunk", category: "SIEM", logo: "🔍" },
//     { name: "Microsoft Sentinel", category: "SIEM", logo: "🛡️" },
//     { name: "QRadar", category: "SIEM", logo: "📊" },
//     { name: "CrowdStrike", category: "EDR", logo: "🦅" },
//     { name: "Palo Alto", category: "Firewall", logo: "🔥" },
//     { name: "ServiceNow", category: "ITSM", logo: "🎫" },
//     { name: "Jira", category: "Ticketing", logo: "📋" },
//     { name: "Slack", category: "Communication", logo: "💬" },
//   ]

//   const renderStepContent = () => {
//     switch (currentStep) {
//       case 1:
//         return (
//           <div className="space-y-6">
//             <div className="grid grid-cols-2 gap-6">
//               <div className="space-y-2">
//                 <Label htmlFor="orgName">Organization Name *</Label>
//                 <Input
//                   id="orgName"
//                   placeholder="Enter organization name"
//                   value={orgData.name}
//                   onChange={(e) => setOrgData({ ...orgData, name: e.target.value })}
//                   className="bg-slate-900 border-slate-700"
//                 />
//               </div>
//               <div className="space-y-2">
//                 <Label htmlFor="industry">Industry *</Label>
//                 <Select value={orgData.industry} onValueChange={(value) => setOrgData({ ...orgData, industry: value })}>
//                   <SelectTrigger className="bg-slate-900 border-slate-700">
//                     <SelectValue placeholder="Select industry" />
//                   </SelectTrigger>
//                   <SelectContent>
//                     {industries.map((ind) => (
//                       <SelectItem key={ind} value={ind}>
//                         {ind}
//                       </SelectItem>
//                     ))}
//                   </SelectContent>
//                 </Select>
//               </div>
//             </div>

//             <div className="grid grid-cols-2 gap-6">
//               <div className="space-y-2">
//                 <Label htmlFor="size">Organization Size *</Label>
//                 <Select value={orgData.size} onValueChange={(value) => setOrgData({ ...orgData, size: value })}>
//                   <SelectTrigger className="bg-slate-900 border-slate-700">
//                     <SelectValue placeholder="Select size" />
//                   </SelectTrigger>
//                   <SelectContent>
//                     <SelectItem value="1-50">1-50 employees</SelectItem>
//                     <SelectItem value="51-200">51-200 employees</SelectItem>
//                     <SelectItem value="201-1000">201-1,000 employees</SelectItem>
//                     <SelectItem value="1001-5000">1,001-5,000 employees</SelectItem>
//                     <SelectItem value="5000+">5,000+ employees</SelectItem>
//                   </SelectContent>
//                 </Select>
//               </div>
//               <div className="space-y-2">
//                 <Label htmlFor="region">Primary Region *</Label>
//                 <Select value={orgData.region} onValueChange={(value) => setOrgData({ ...orgData, region: value })}>
//                   <SelectTrigger className="bg-slate-900 border-slate-700">
//                     <SelectValue placeholder="Select region" />
//                   </SelectTrigger>
//                   <SelectContent>
//                     <SelectItem value="global">Global</SelectItem>
//                     <SelectItem value="uae">UAE</SelectItem>
//                     <SelectItem value="gcc">GCC</SelectItem>
//                     <SelectItem value="mena">MENA</SelectItem>
//                   </SelectContent>
//                 </Select>
//               </div>
//             </div>

//             <Card className="bg-slate-900/50 border-slate-700">
//               <CardHeader>
//                 <CardTitle className="text-sm">Compliance Requirements</CardTitle>
//               </CardHeader>
//               <CardContent>
//                 <div className="grid grid-cols-2 gap-4">
//                   {["ISO 27001", "NIST CSF", "GDPR", "PCI DSS", "SOC 2", "HIPAA"].map((framework) => (
//                     <div key={framework} className="flex items-center space-x-2">
//                       <Checkbox id={framework} />
//                       <label htmlFor={framework} className="text-sm">
//                         {framework}
//                       </label>
//                     </div>
//                   ))}
//                 </div>
//               </CardContent>
//             </Card>
//           </div>
//         )

//       case 2:
//         return (
//           <div className="space-y-6">
//             <Tabs defaultValue="domains" className="w-full">
//               <TabsList className="grid w-full grid-cols-4 bg-slate-900">
//                 <TabsTrigger value="domains">Domains</TabsTrigger>
//                 <TabsTrigger value="ip">IP Ranges</TabsTrigger>
//                 <TabsTrigger value="cloud">Cloud Assets</TabsTrigger>
//                 <TabsTrigger value="supply-chain">Supply Chain</TabsTrigger>
//               </TabsList>

//               <TabsContent value="domains" className="space-y-4">
//                 <div className="space-y-2">
//                   <Label>Primary Domains</Label>
//                   <Input
//                     placeholder="example.com (press Enter to add)"
//                     className="bg-slate-900 border-slate-700"
//                     onKeyPress={(e) => {
//                       if (e.key === "Enter") {
//                         const value = (e.target as HTMLInputElement).value
//                         if (value) {
//                           setOrgData({ ...orgData, domains: [...orgData.domains, value] })
//                           ;(e.target as HTMLInputElement).value = ""
//                         }
//                       }
//                     }}
//                   />
//                 </div>
//                 <div className="flex flex-wrap gap-2">
//                   {orgData.domains.map((domain, idx) => (
//                     <Badge key={idx} variant="secondary" className="bg-blue-500/20 text-blue-400">
//                       {domain}
//                     </Badge>
//                   ))}
//                 </div>
//                 <Button variant="outline" className="w-full bg-transparent">
//                   <Upload className="w-4 h-4 mr-2" />
//                   Upload Domain List (CSV)
//                 </Button>
//               </TabsContent>

//               <TabsContent value="ip" className="space-y-4">
//                 <div className="space-y-2">
//                   <Label>IP Ranges / CIDR Blocks</Label>
//                   <Input
//                     placeholder="192.168.1.0/24 (press Enter to add)"
//                     className="bg-slate-900 border-slate-700"
//                     onKeyPress={(e) => {
//                       if (e.key === "Enter") {
//                         const value = (e.target as HTMLInputElement).value
//                         if (value) {
//                           setOrgData({ ...orgData, ipRanges: [...orgData.ipRanges, value] })
//                           ;(e.target as HTMLInputElement).value = ""
//                         }
//                       }
//                     }}
//                   />
//                 </div>
//                 <div className="flex flex-wrap gap-2">
//                   {orgData.ipRanges.map((ip, idx) => (
//                     <Badge key={idx} variant="secondary" className="bg-purple-500/20 text-purple-400">
//                       {ip}
//                     </Badge>
//                   ))}
//                 </div>
//               </TabsContent>

//               <TabsContent value="cloud" className="space-y-4">
//                 <Label>Cloud Service Providers</Label>
//                 <div className="grid grid-cols-2 gap-4">
//                   {["AWS", "Azure", "Google Cloud", "Oracle Cloud", "Alibaba Cloud", "IBM Cloud"].map((provider) => (
//                     <Card
//                       key={provider}
//                       className="bg-slate-900/50 border-slate-700 cursor-pointer hover:border-blue-500 transition-colors"
//                     >
//                       <CardContent className="p-4">
//                         <div className="flex items-center justify-between">
//                           <span>{provider}</span>
//                           <Checkbox
//                             checked={orgData.cloudProviders.includes(provider)}
//                             onCheckedChange={(checked) => {
//                               if (checked) {
//                                 setOrgData({ ...orgData, cloudProviders: [...orgData.cloudProviders, provider] })
//                               } else {
//                                 setOrgData({
//                                   ...orgData,
//                                   cloudProviders: orgData.cloudProviders.filter((p) => p !== provider),
//                                 })
//                               }
//                             }}
//                           />
//                         </div>
//                       </CardContent>
//                     </Card>
//                   ))}
//                 </div>
//               </TabsContent>

//               <TabsContent value="supply-chain" className="space-y-4">
//                 <Card className="bg-slate-900/50 border-slate-700">
//                   <CardHeader>
//                     <CardTitle className="text-sm">Third-Party Risk Management</CardTitle>
//                     <CardDescription>Add vendors and suppliers for continuous monitoring</CardDescription>
//                   </CardHeader>
//                   <CardContent className="space-y-4">
//                     <div className="space-y-2">
//                       <Label>Vendor/Supplier Domain</Label>
//                       <Input placeholder="vendor-domain.com" className="bg-slate-900 border-slate-700" />
//                     </div>
//                     <div className="grid grid-cols-2 gap-4">
//                       <div className="space-y-2">
//                         <Label>Risk Level</Label>
//                         <Select>
//                           <SelectTrigger className="bg-slate-900 border-slate-700">
//                             <SelectValue placeholder="Select level" />
//                           </SelectTrigger>
//                           <SelectContent>
//                             <SelectItem value="critical">Critical</SelectItem>
//                             <SelectItem value="high">High</SelectItem>
//                             <SelectItem value="medium">Medium</SelectItem>
//                             <SelectItem value="low">Low</SelectItem>
//                           </SelectContent>
//                         </Select>
//                       </div>
//                       <div className="space-y-2">
//                         <Label>Access Level</Label>
//                         <Select>
//                           <SelectTrigger className="bg-slate-900 border-slate-700">
//                             <SelectValue placeholder="Select access" />
//                           </SelectTrigger>
//                           <SelectContent>
//                             <SelectItem value="full">Full Access</SelectItem>
//                             <SelectItem value="limited">Limited Access</SelectItem>
//                             <SelectItem value="readonly">Read Only</SelectItem>
//                           </SelectContent>
//                         </Select>
//                       </div>
//                     </div>
//                     <Button className="w-full">Add Vendor</Button>
//                   </CardContent>
//                 </Card>
//               </TabsContent>
//             </Tabs>
//           </div>
//         )

//       case 3:
//         return (
//           <div className="space-y-6">
//             <div className="text-center space-y-2 mb-6">
//               <h3 className="text-xl font-semibold">Connect Your Security Stack</h3>
//               <p className="text-slate-400">Integrate with your existing tools for unified threat intelligence</p>
//             </div>

//             <div className="grid grid-cols-2 gap-4">
//               {integrations.map((integration) => (
//                 <Card
//                   key={integration.name}
//                   className={`cursor-pointer transition-all ${
//                     orgData.integrations.includes(integration.name)
//                       ? "bg-blue-500/20 border-blue-500"
//                       : "bg-slate-900/50 border-slate-700 hover:border-slate-600"
//                   }`}
//                   onClick={() => {
//                     if (orgData.integrations.includes(integration.name)) {
//                       setOrgData({
//                         ...orgData,
//                         integrations: orgData.integrations.filter((i) => i !== integration.name),
//                       })
//                     } else {
//                       setOrgData({ ...orgData, integrations: [...orgData.integrations, integration.name] })
//                     }
//                   }}
//                 >
//                   <CardContent className="p-4">
//                     <div className="flex items-center justify-between">
//                       <div className="flex items-center gap-3">
//                         <span className="text-2xl">{integration.logo}</span>
//                         <div>
//                           <div className="font-semibold">{integration.name}</div>
//                           <div className="text-xs text-slate-400">{integration.category}</div>
//                         </div>
//                       </div>
//                       {orgData.integrations.includes(integration.name) && (
//                         <CheckCircle2 className="w-5 h-5 text-blue-400" />
//                       )}
//                     </div>
//                   </CardContent>
//                 </Card>
//               ))}
//             </div>

//             <Card className="bg-slate-900/50 border-slate-700">
//               <CardHeader>
//                 <CardTitle className="text-sm">API Configuration</CardTitle>
//               </CardHeader>
//               <CardContent className="space-y-4">
//                 <div className="space-y-2">
//                   <Label>API Endpoint</Label>
//                   <Input placeholder="https://api.yourorg.com" className="bg-slate-900 border-slate-700" />
//                 </div>
//                 <div className="space-y-2">
//                   <Label>API Key</Label>
//                   <Input type="password" placeholder="Enter API key" className="bg-slate-900 border-slate-700" />
//                 </div>
//                 <Button variant="outline" className="w-full bg-transparent">
//                   <Lock className="w-4 h-4 mr-2" />
//                   Test Connection
//                 </Button>
//               </CardContent>
//             </Card>
//           </div>
//         )

//       case 4:
//         return (
//           <div className="space-y-6">
//             <div className="text-center space-y-2 mb-6">
//               <h3 className="text-xl font-semibold">Setup Your Security Team</h3>
//               <p className="text-slate-400">Define roles and invite team members</p>
//             </div>

//             <div className="grid grid-cols-2 gap-4">
//               {[
//                 { role: "SOC Analyst", count: 0, description: "Monitor and respond to security alerts" },
//                 { role: "Incident Response", count: 0, description: "Handle security incidents and breaches" },
//                 { role: "Threat Intelligence", count: 0, description: "Analyze threat landscape and actors" },
//                 { role: "Threat Hunter", count: 0, description: "Proactively hunt for threats" },
//                 { role: "Security Admin", count: 0, description: "Manage platform and configurations" },
//                 { role: "CISO/Executive", count: 0, description: "View executive dashboards and reports" },
//               ].map((team) => (
//                 <Card key={team.role} className="bg-slate-900/50 border-slate-700">
//                   <CardContent className="p-4 space-y-3">
//                     <div>
//                       <div className="font-semibold">{team.role}</div>
//                       <div className="text-xs text-slate-400">{team.description}</div>
//                     </div>
//                     <div className="flex items-center gap-2">
//                       <Input type="number" min="0" placeholder="0" className="bg-slate-900 border-slate-700 w-20" />
//                       <span className="text-sm text-slate-400">users</span>
//                     </div>
//                   </CardContent>
//                 </Card>
//               ))}
//             </div>

//             <Card className="bg-slate-900/50 border-slate-700">
//               <CardHeader>
//                 <CardTitle className="text-sm">Invite Team Members</CardTitle>
//               </CardHeader>
//               <CardContent className="space-y-4">
//                 <div className="grid grid-cols-2 gap-4">
//                   <Input placeholder="Email address" className="bg-slate-900 border-slate-700" />
//                   <Select>
//                     <SelectTrigger className="bg-slate-900 border-slate-700">
//                       <SelectValue placeholder="Select role" />
//                     </SelectTrigger>
//                     <SelectContent>
//                       <SelectItem value="soc">SOC Analyst</SelectItem>
//                       <SelectItem value="ir">Incident Response</SelectItem>
//                       <SelectItem value="ti">Threat Intelligence</SelectItem>
//                       <SelectItem value="th">Threat Hunter</SelectItem>
//                     </SelectContent>
//                   </Select>
//                 </div>
//                 <Button className="w-full">Send Invitation</Button>
//               </CardContent>
//             </Card>
//           </div>
//         )

//       case 5:
//         return (
//           <div className="space-y-6">
//             <div className="text-center space-y-2 mb-6">
//               <CheckCircle2 className="w-16 h-16 text-green-400 mx-auto" />
//               <h3 className="text-2xl font-semibold">Ready to Launch!</h3>
//               <p className="text-slate-400">Review your configuration and start protecting your organization</p>
//             </div>

//             <div className="grid grid-cols-2 gap-4">
//               <Card className="bg-slate-900/50 border-slate-700">
//                 <CardHeader>
//                   <CardTitle className="text-sm flex items-center gap-2">
//                     <Building2 className="w-4 h-4" />
//                     Organization
//                   </CardTitle>
//                 </CardHeader>
//                 <CardContent className="space-y-2 text-sm">
//                   <div className="flex justify-between">
//                     <span className="text-slate-400">Name:</span>
//                     <span>{orgData.name || "Not set"}</span>
//                   </div>
//                   <div className="flex justify-between">
//                     <span className="text-slate-400">Industry:</span>
//                     <span>{orgData.industry || "Not set"}</span>
//                   </div>
//                   <div className="flex justify-between">
//                     <span className="text-slate-400">Size:</span>
//                     <span>{orgData.size || "Not set"}</span>
//                   </div>
//                   <div className="flex justify-between">
//                     <span className="text-slate-400">Region:</span>
//                     <span className="uppercase">{orgData.region}</span>
//                   </div>
//                 </CardContent>
//               </Card>

//               <Card className="bg-slate-900/50 border-slate-700">
//                 <CardHeader>
//                   <CardTitle className="text-sm flex items-center gap-2">
//                     <Network className="w-4 h-4" />
//                     Assets
//                   </CardTitle>
//                 </CardHeader>
//                 <CardContent className="space-y-2 text-sm">
//                   <div className="flex justify-between">
//                     <span className="text-slate-400">Domains:</span>
//                     <span>{orgData.domains.length}</span>
//                   </div>
//                   <div className="flex justify-between">
//                     <span className="text-slate-400">IP Ranges:</span>
//                     <span>{orgData.ipRanges.length}</span>
//                   </div>
//                   <div className="flex justify-between">
//                     <span className="text-slate-400">Cloud Providers:</span>
//                     <span>{orgData.cloudProviders.length}</span>
//                   </div>
//                 </CardContent>
//               </Card>

//               <Card className="bg-slate-900/50 border-slate-700">
//                 <CardHeader>
//                   <CardTitle className="text-sm flex items-center gap-2">
//                     <Shield className="w-4 h-4" />
//                     Integrations
//                   </CardTitle>
//                 </CardHeader>
//                 <CardContent>
//                   <div className="text-2xl font-bold">{orgData.integrations.length}</div>
//                   <div className="text-xs text-slate-400">Connected tools</div>
//                 </CardContent>
//               </Card>

//               <Card className="bg-slate-900/50 border-slate-700">
//                 <CardHeader>
//                   <CardTitle className="text-sm flex items-center gap-2">
//                     <Users className="w-4 h-4" />
//                     Team
//                   </CardTitle>
//                 </CardHeader>
//                 <CardContent>
//                   <div className="text-2xl font-bold">Ready</div>
//                   <div className="text-xs text-slate-400">Team invitations pending</div>
//                 </CardContent>
//               </Card>
//             </div>

//             <Card className="bg-gradient-to-r from-blue-500/20 to-purple-500/20 border-blue-500/50">
//               <CardContent className="p-6 text-center space-y-4">
//                 <h4 className="text-lg font-semibold">Initial Scan Configuration</h4>
//                 <p className="text-sm text-slate-300">
//                   CHURCHILL will perform an initial comprehensive scan of your assets including:
//                 </p>
//                 <div className="grid grid-cols-2 gap-2 text-sm">
//                   <div className="flex items-center gap-2">
//                     <CheckCircle2 className="w-4 h-4 text-green-400" />
//                     <span>Attack Surface Discovery</span>
//                   </div>
//                   <div className="flex items-center gap-2">
//                     <CheckCircle2 className="w-4 h-4 text-green-400" />
//                     <span>Vulnerability Assessment</span>
//                   </div>
//                   <div className="flex items-center gap-2">
//                     <CheckCircle2 className="w-4 h-4 text-green-400" />
//                     <span>Dark Web Monitoring</span>
//                   </div>
//                   <div className="flex items-center gap-2">
//                     <CheckCircle2 className="w-4 h-4 text-green-400" />
//                     <span>Threat Intelligence Correlation</span>
//                   </div>
//                 </div>
//                 <p className="text-xs text-slate-400">Estimated time: 15-30 minutes</p>
//               </CardContent>
//             </Card>
//           </div>
//         )

//       default:
//         return null
//     }
//   }

//   return (
//     <div className="min-h-screen bg-gradient-to-br from-slate-950 via-slate-900 to-slate-950 text-white p-6">
//       <div className="max-w-6xl mx-auto space-y-6">
//         {/* Header */}
//         <div className="text-center space-y-2">
//           <h1 className="text-4xl font-bold bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 bg-clip-text text-transparent">
//             Welcome to CHURCHILL
//           </h1>
//           <p className="text-slate-400">AI-Enabled Threat Intelligence Platform</p>
//         </div>

//         {/* Progress Steps */}
//         <Card className="bg-slate-900/50 border-slate-700">
//           <CardContent className="p-6">
//             <div className="flex items-center justify-between">
//               {steps.map((step, idx) => (
//                 <React.Fragment key={step.id}>
//                   <div className="flex flex-col items-center gap-2">
//                     <div
//                       className={`w-12 h-12 rounded-full flex items-center justify-center transition-all ${
//                         currentStep === step.id
//                           ? "bg-blue-500 text-white"
//                           : currentStep > step.id
//                             ? "bg-green-500 text-white"
//                             : "bg-slate-800 text-slate-400"
//                       }`}
//                     >
//                       <step.icon className="w-6 h-6" />
//                     </div>
//                     <div className="text-xs text-center max-w-[100px]">{step.name}</div>
//                   </div>
//                   {idx < steps.length - 1 && (
//                     <div
//                       className={`flex-1 h-1 mx-2 rounded ${currentStep > step.id ? "bg-green-500" : "bg-slate-800"}`}
//                     />
//                   )}
//                 </React.Fragment>
//               ))}
//             </div>
//           </CardContent>
//         </Card>

//         {/* Step Content */}
//         <Card className="bg-slate-900/50 border-slate-700">
//           <CardContent className="p-8">{renderStepContent()}</CardContent>
//         </Card>

//         {/* Navigation */}
//         <div className="flex justify-between">
//           <Button
//             variant="outline"
//             onClick={() => setCurrentStep(Math.max(1, currentStep - 1))}
//             disabled={currentStep === 1}
//           >
//             Previous
//           </Button>
//           {currentStep < 5 ? (
//             <Button onClick={() => setCurrentStep(Math.min(5, currentStep + 1))}>
//               Next <ArrowRight className="w-4 h-4 ml-2" />
//             </Button>
//           ) : (
//             <Button className="bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600">
//               Launch CHURCHILL <ArrowRight className="w-4 h-4 ml-2" />
//             </Button>
//           )}
//         </div>
//       </div>
//     </div>
//   )
// }
