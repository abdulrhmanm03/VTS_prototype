"use client";

import { useState } from "react";
import {
  Bug,
  TrendingUp,
  Shield,
  AlertTriangle,
  Search,
  Filter,
  Clock,
  Activity,
  BarChart3,
} from "lucide-react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import ConfirmDialogButton from "@/components/ConfirmButton";

const VulnMatrix = () => {
  const [selectedSeverity, setSelectedSeverity] = useState("all");
  const [selectedStatus, setSelectedStatus] = useState("all");
  const [selectedTab, setSelectedTab] = useState("database");

  return (
    <div className="min-h-screen bg-transparent p-8">
      {/* Header */}
      <div className="flex items-center justify-between mb-8">
        <div className="flex items-center space-x-3">
          <div>
            <h1 className="text-4xl font-bold text-blue-400 drop-shadow-[0_0_12px_rgba(59,130,246,0.9)]">
              VulnMatrix
            </h1>
            <p className="text-amber-300">
              Vulnerability & Exploit Intelligence
            </p>
          </div>
        </div>
        <ConfirmDialogButton
          buttonLabel="Export Report"
          dialogTitle="Confirm Export"
          extraContent="Are you sure you want to export the report?"
          onConfirm={() => console.log("Report exported")}
          onCancel={() => console.log("Export canceled")}
        />
      </div>

      {/* Stats Grid */}
      <div className="grid grid-cols-6 gap-6 mb-8">
        {[
          {
            label: "Total Vulnerabilities",
            value: "3,847",
            trend: "+127 this week",
            icon: Bug,
            color: "amber",
            change: "+3.4%",
          },
          {
            label: "Critical CVEs",
            value: "156",
            trend: "+23 new",
            icon: AlertTriangle,
            color: "red",
            change: "+17.3%",
          },
          {
            label: "Zero-Days",
            value: "12",
            trend: "5 unpatched",
            icon: Shield,
            color: "orange",
            change: "+20.0%",
          },
          {
            label: "Exploits Available",
            value: "892",
            trend: "+45 this month",
            icon: TrendingUp,
            color: "purple",
            change: "+5.3%",
          },
          {
            label: "Actively Exploited",
            value: "67",
            trend: "In the wild",
            icon: Activity,
            color: "red",
            change: "+8.1%",
          },
          {
            label: "Avg CVSS Score",
            value: "7.8",
            trend: "High severity",
            icon: BarChart3,
            color: "yellow",
            change: "+0.3",
          },
        ].map((stat, idx) => (
          <Card key={idx} className="bg-slate-900/50 border-slate-700/50">
            <CardContent className="p-6">
              <div className="flex items-center justify-between mb-3">
                <div
                  className={`w-10 h-10 rounded-lg bg-${stat.color}-500/20 flex items-center justify-center`}
                >
                  <stat.icon className={`w-5 h-5 text-${stat.color}-400`} />
                </div>
                <span className="text-xs text-green-400 font-semibold">
                  {stat.change}
                </span>
              </div>
              <div className="text-3xl font-bold text-white mb-1">
                {stat.value}
              </div>
              <div className="text-sm text-slate-400 mb-2">{stat.label}</div>
              <div className="text-xs text-green-400">{stat.trend}</div>
            </CardContent>
          </Card>
        ))}
      </div>

      <Tabs
        value={selectedTab}
        onValueChange={setSelectedTab}
        className="space-y-6"
      >
        <TabsList className="bg-slate-900/50 border border-slate-700">
          <TabsTrigger value="database">Vulnerability Database</TabsTrigger>
          <TabsTrigger value="exploits">Exploit Intelligence</TabsTrigger>
          <TabsTrigger value="zero-days">Zero-Day Tracker</TabsTrigger>
          <TabsTrigger value="analytics">Analytics & Trends</TabsTrigger>
          <TabsTrigger value="remediation">Remediation Tracking</TabsTrigger>
          <TabsTrigger value="supply-chain">Supply Chain CVEs</TabsTrigger>
        </TabsList>

        {/* Vulnerability Database */}
        <TabsContent value="database" className="space-y-6">
          {/* Filters and Search */}
          <Card className="bg-slate-900/50 border-slate-700/50">
            <CardContent className="p-4">
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-4 flex-1">
                  <div className="flex-1 relative">
                    <Search className="absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-slate-500" />
                    <input
                      type="text"
                      placeholder="Search by CVE ID, product, vendor, or keyword..."
                      className="w-full pl-10 pr-4 py-3 bg-slate-800 border border-slate-600 rounded-lg text-white placeholder-slate-500 focus:border-amber-500 focus:ring-2 focus:ring-amber-500/20"
                    />
                  </div>

                  <select
                    value={selectedSeverity}
                    onChange={(e) => setSelectedSeverity(e.target.value)}
                    className="px-4 py-3 bg-slate-800 border border-slate-600 rounded-lg text-white"
                  >
                    <option value="all">All Severities</option>
                    <option value="critical">Critical</option>
                    <option value="high">High</option>
                    <option value="medium">Medium</option>
                    <option value="low">Low</option>
                  </select>

                  <select
                    value={selectedStatus}
                    onChange={(e) => setSelectedStatus(e.target.value)}
                    className="px-4 py-3 bg-slate-800 border border-slate-600 rounded-lg text-white"
                  >
                    <option value="all">All Status</option>
                    <option value="unpatched">Unpatched</option>
                    <option value="patched">Patched</option>
                    <option value="wontfix">Won&#39;t Fix</option>
                    <option value="exploited">Actively Exploited</option>
                  </select>

                  <button className="px-4 py-3 bg-slate-800 hover:bg-slate-700 border border-slate-600 text-white rounded-lg flex items-center space-x-2">
                    <Filter className="w-5 h-5" />
                    <span>More Filters</span>
                  </button>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Vulnerability Table */}
          <Card className="bg-slate-900/50 border-slate-700/50">
            <CardHeader>
              <CardTitle className="text-white">
                Vulnerability Database
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="overflow-x-auto hide-scrollbar">
                <table className="w-full">
                  <thead>
                    <tr className="border-b border-slate-700">
                      <th className="text-left py-3 px-4 text-sm font-semibold text-slate-400">
                        CVE ID
                      </th>
                      <th className="text-left py-3 px-4 text-sm font-semibold text-slate-400">
                        Vulnerability
                      </th>
                      <th className="text-left py-3 px-4 text-sm font-semibold text-slate-400">
                        Severity
                      </th>
                      <th className="text-left py-3 px-4 text-sm font-semibold text-slate-400">
                        CVSS v3
                      </th>
                      <th className="text-left py-3 px-4 text-sm font-semibold text-slate-400">
                        Affected Product
                      </th>
                      <th className="text-left py-3 px-4 text-sm font-semibold text-slate-400">
                        Vendor
                      </th>
                      <th className="text-left py-3 px-4 text-sm font-semibold text-slate-400">
                        Exploit
                      </th>
                      <th className="text-left py-3 px-4 text-sm font-semibold text-slate-400">
                        Status
                      </th>
                      <th className="text-left py-3 px-4 text-sm font-semibold text-slate-400">
                        Published
                      </th>
                      <th className="text-left py-3 px-4 text-sm font-semibold text-slate-400">
                        EPSS Score
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    {[
                      {
                        cve: "CVE-2024-1234",
                        title: "Remote Code Execution in Apache HTTP Server",
                        severity: "Critical",
                        cvss: 10.0,
                        product: "Apache HTTP Server 2.4.x",
                        vendor: "Apache",
                        exploit: "Public",
                        status: "Unpatched",
                        published: "2 days ago",
                        epss: "89.2%",
                        cwe: "CWE-78: OS Command Injection",
                      },
                      {
                        cve: "CVE-2024-5678",
                        title: "SQL Injection in WordPress Contact Form Plugin",
                        severity: "High",
                        cvss: 8.8,
                        product: "WP Contact Form 7",
                        vendor: "WordPress",
                        exploit: "POC Available",
                        status: "Patched",
                        published: "1 week ago",
                        epss: "45.7%",
                        cwe: "CWE-89: SQL Injection",
                      },
                      {
                        cve: "CVE-2024-9012",
                        title: "Authentication Bypass in Cisco ASA",
                        severity: "Critical",
                        cvss: 9.8,
                        product: "Cisco ASA 9.x",
                        vendor: "Cisco",
                        exploit: "In the Wild",
                        status: "Unpatched",
                        published: "3 days ago",
                        epss: "92.5%",
                        cwe: "CWE-287: Improper Authentication",
                      },
                      {
                        cve: "CVE-2024-3456",
                        title: "Buffer Overflow in OpenSSL",
                        severity: "High",
                        cvss: 7.5,
                        product: "OpenSSL 3.0.x",
                        vendor: "OpenSSL",
                        exploit: "Theoretical",
                        status: "Patched",
                        published: "2 weeks ago",
                        epss: "23.4%",
                        cwe: "CWE-120: Buffer Overflow",
                      },
                      {
                        cve: "CVE-2024-7890",
                        title: "Cross-Site Scripting in Microsoft Exchange",
                        severity: "Medium",
                        cvss: 6.1,
                        product: "Exchange Server 2019",
                        vendor: "Microsoft",
                        exploit: "Public",
                        status: "Patched",
                        published: "1 month ago",
                        epss: "12.8%",
                        cwe: "CWE-79: Cross-Site Scripting",
                      },
                      {
                        cve: "CVE-2024-4567",
                        title: "Privilege Escalation in Linux Kernel",
                        severity: "Critical",
                        cvss: 9.3,
                        product: "Linux Kernel 5.x",
                        vendor: "Linux",
                        exploit: "In the Wild",
                        status: "Patched",
                        published: "5 days ago",
                        epss: "78.9%",
                        cwe: "CWE-269: Improper Privilege Management",
                      },
                      {
                        cve: "CVE-2024-8901",
                        title: "Deserialization Vulnerability in Java",
                        severity: "High",
                        cvss: 8.1,
                        product: "Java SE 11",
                        vendor: "Oracle",
                        exploit: "POC Available",
                        status: "Patched",
                        published: "1 week ago",
                        epss: "34.6%",
                        cwe: "CWE-502: Deserialization of Untrusted Data",
                      },
                      {
                        cve: "CVE-2024-2345",
                        title: "Path Traversal in Node.js",
                        severity: "High",
                        cvss: 7.8,
                        product: "Node.js 18.x",
                        vendor: "Node.js",
                        exploit: "Public",
                        status: "Unpatched",
                        published: "4 days ago",
                        epss: "56.3%",
                        cwe: "CWE-22: Path Traversal",
                      },
                    ].map((vuln, idx) => (
                      <tr
                        key={idx}
                        className="border-b border-slate-800 hover:bg-slate-800/50 transition-colors cursor-pointer"
                      >
                        <td className="py-4 px-4">
                          <span className="text-sm font-mono text-amber-400 font-semibold">
                            {vuln.cve}
                          </span>
                        </td>
                        <td className="py-4 px-4">
                          <div className="text-sm font-semibold text-white max-w-xs">
                            {vuln.title}
                          </div>
                          <div className="text-xs text-slate-500 mt-1">
                            {vuln.cwe}
                          </div>
                        </td>
                        <td className="py-4 px-4">
                          <span
                            className={`px-2 py-1 rounded text-xs font-bold ${
                              vuln.severity === "Critical"
                                ? "bg-red-500/20 text-red-400"
                                : vuln.severity === "High"
                                ? "bg-orange-500/20 text-orange-400"
                                : vuln.severity === "Medium"
                                ? "bg-yellow-500/20 text-yellow-400"
                                : "bg-green-500/20 text-green-400"
                            }`}
                          >
                            {vuln.severity}
                          </span>
                        </td>
                        <td className="py-4 px-4">
                          <div className="flex items-center space-x-2">
                            <span className="text-2xl font-bold text-white">
                              {vuln.cvss}
                            </span>
                            <div
                              className={`w-2 h-2 rounded-full ${
                                vuln.cvss >= 9.0
                                  ? "bg-red-500"
                                  : vuln.cvss >= 7.0
                                  ? "bg-orange-500"
                                  : vuln.cvss >= 4.0
                                  ? "bg-yellow-500"
                                  : "bg-green-500"
                              }`}
                            />
                          </div>
                        </td>
                        <td className="py-4 px-4">
                          <div className="text-sm text-white font-medium">
                            {vuln.product}
                          </div>
                        </td>
                        <td className="py-4 px-4">
                          <span className="text-sm text-slate-300">
                            {vuln.vendor}
                          </span>
                        </td>
                        <td className="py-4 px-4">
                          <span
                            className={`px-2 py-1 rounded text-xs font-semibold ${
                              vuln.exploit === "In the Wild"
                                ? "bg-red-500/20 text-red-400 animate-pulse"
                                : vuln.exploit === "Public"
                                ? "bg-orange-500/20 text-orange-400"
                                : vuln.exploit === "POC Available"
                                ? "bg-yellow-500/20 text-yellow-400"
                                : "bg-slate-500/20 text-slate-400"
                            }`}
                          >
                            {vuln.exploit}
                          </span>
                        </td>
                        <td className="py-4 px-4">
                          <span
                            className={`px-2 py-1 rounded text-xs font-semibold ${
                              vuln.status === "Unpatched"
                                ? "bg-red-500/20 text-red-400"
                                : "bg-green-500/20 text-green-400"
                            }`}
                          >
                            {vuln.status}
                          </span>
                        </td>
                        <td className="py-4 px-4">
                          <div className="flex items-center space-x-2 text-xs text-slate-400">
                            <Clock className="w-3 h-3" />
                            <span>{vuln.published}</span>
                          </div>
                        </td>
                        <td className="py-4 px-4">
                          <div className="text-sm font-semibold text-amber-400">
                            {vuln.epss}
                          </div>
                          <div className="text-xs text-slate-500">
                            Exploit Probability
                          </div>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* Exploit Intelligence */}
        <TabsContent value="exploits" className="space-y-6">
          <div className="grid grid-cols-3 gap-6">
            <Card className="bg-slate-900/50 border-slate-700/50 col-span-2">
              <CardHeader>
                <CardTitle className="text-white">
                  Active Exploit Campaigns
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                {[
                  {
                    name: "Operation ShadowStrike",
                    cves: ["CVE-2024-1234", "CVE-2024-9012"],
                    targets: "Enterprise Networks",
                    firstSeen: "2024-10-10",
                    victims: 247,
                    severity: "Critical",
                    ttps: ["T1190", "T1059", "T1486"],
                  },
                  {
                    name: "WordPress Mass Exploitation",
                    cves: ["CVE-2024-5678"],
                    targets: "WordPress Sites",
                    firstSeen: "2024-10-12",
                    victims: 1893,
                    severity: "High",
                    ttps: ["T1190", "T1505.003"],
                  },
                  {
                    name: "Cisco ASA Zero-Day Campaign",
                    cves: ["CVE-2024-9012"],
                    targets: "Network Infrastructure",
                    firstSeen: "2024-10-14",
                    victims: 89,
                    severity: "Critical",
                    ttps: ["T1190", "T1078", "T1021"],
                  },
                ].map((campaign, idx) => (
                  <div
                    key={idx}
                    className="bg-slate-800/50 rounded-lg p-5 border border-slate-700 hover:border-amber-500/50 transition-all"
                  >
                    <div className="flex items-start justify-between mb-4">
                      <div>
                        <h3 className="text-lg font-bold text-white mb-2">
                          {campaign.name}
                        </h3>
                        <div className="flex items-center space-x-2 mb-2">
                          {campaign.cves.map((cve, i) => (
                            <span
                              key={i}
                              className="px-2 py-1 bg-amber-500/20 text-amber-400 text-xs font-mono rounded"
                            >
                              {cve}
                            </span>
                          ))}
                        </div>
                      </div>
                      <span
                        className={`px-3 py-1 rounded text-xs font-bold ${
                          campaign.severity === "Critical"
                            ? "bg-red-500/20 text-red-400"
                            : "bg-orange-500/20 text-orange-400"
                        }`}
                      >
                        {campaign.severity}
                      </span>
                    </div>

                    <div className="grid grid-cols-3 gap-4 mb-4">
                      <div>
                        <div className="text-xs text-slate-400 mb-1">
                          Targets
                        </div>
                        <div className="text-sm text-white font-semibold">
                          {campaign.targets}
                        </div>
                      </div>
                      <div>
                        <div className="text-xs text-slate-400 mb-1">
                          First Seen
                        </div>
                        <div className="text-sm text-white font-semibold">
                          {campaign.firstSeen}
                        </div>
                      </div>
                      <div>
                        <div className="text-xs text-slate-400 mb-1">
                          Known Victims
                        </div>
                        <div className="text-sm text-red-400 font-semibold">
                          {campaign.victims}
                        </div>
                      </div>
                    </div>

                    <div className="flex items-center space-x-2 mb-3">
                      <span className="text-xs text-slate-400">
                        MITRE ATT&CK TTPs:
                      </span>
                      {campaign.ttps.map((ttp, i) => (
                        <span
                          key={i}
                          className="px-2 py-0.5 bg-purple-500/20 text-purple-400 text-xs rounded"
                        >
                          {ttp}
                        </span>
                      ))}
                    </div>

                    <div className="flex items-center space-x-2">
                      <button className="px-4 py-2 bg-amber-600 hover:bg-amber-700 text-white rounded-lg text-sm">
                        View Details
                      </button>
                      <button className="px-4 py-2 bg-slate-700 hover:bg-slate-600 text-white rounded-lg text-sm">
                        Download IOCs
                      </button>
                    </div>
                  </div>
                ))}
              </CardContent>
            </Card>

            <Card className="bg-slate-900/50 border-slate-700/50">
              <CardHeader>
                <CardTitle className="text-white">Exploit Statistics</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                {[
                  { label: "Total Exploits", value: "892", color: "amber" },
                  { label: "Public Exploits", value: "567", color: "orange" },
                  { label: "POC Available", value: "234", color: "yellow" },
                  { label: "In the Wild", value: "67", color: "red" },
                  { label: "Weaponized", value: "89", color: "red" },
                ].map((stat, idx) => (
                  <div
                    key={idx}
                    className="flex items-center justify-between p-3 bg-slate-800/50 rounded-lg"
                  >
                    <span className="text-sm text-slate-300">{stat.label}</span>
                    <span
                      className={`text-xl font-bold text-${stat.color}-400`}
                    >
                      {stat.value}
                    </span>
                  </div>
                ))}

                <div className="pt-4 border-t border-slate-700">
                  <h4 className="text-sm font-semibold text-white mb-3">
                    Top Exploit Sources
                  </h4>
                  <div className="space-y-2">
                    {[
                      { source: "Exploit-DB", count: 234 },
                      { source: "GitHub", count: 189 },
                      { source: "Metasploit", count: 156 },
                      { source: "PacketStorm", count: 123 },
                      { source: "Dark Web", count: 89 },
                    ].map((source, idx) => (
                      <div
                        key={idx}
                        className="flex items-center justify-between text-xs"
                      >
                        <span className="text-slate-400">{source.source}</span>
                        <span className="text-amber-400 font-semibold">
                          {source.count}
                        </span>
                      </div>
                    ))}
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        {/* Zero-Day Tracker */}
        <TabsContent value="zero-days" className="space-y-6">
          <Card className="bg-slate-900/50 border-slate-700/50">
            <CardHeader>
              <CardTitle className="text-white flex items-center justify-between">
                <span>Active Zero-Day Vulnerabilities</span>
                <span className="px-3 py-1 bg-red-500/20 text-red-400 text-sm font-bold rounded">
                  12 Active Zero-Days
                </span>
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              {[
                {
                  id: "ZD-2024-001",
                  title: "Chrome V8 Engine RCE",
                  vendor: "Google",
                  product: "Chrome",
                  discovered: "2024-10-15",
                  status: "Unpatched",
                  exploited: true,
                  cvss: 9.8,
                  impact: "Remote Code Execution",
                },
                {
                  id: "ZD-2024-002",
                  title: "Windows Kernel Privilege Escalation",
                  vendor: "Microsoft",
                  product: "Windows 11",
                  discovered: "2024-10-12",
                  status: "Patch Pending",
                  exploited: true,
                  cvss: 9.3,
                  impact: "Privilege Escalation",
                },
                {
                  id: "ZD-2024-003",
                  title: "iOS WebKit Memory Corruption",
                  vendor: "Apple",
                  product: "iOS 17",
                  discovered: "2024-10-10",
                  status: "Unpatched",
                  exploited: false,
                  cvss: 8.8,
                  impact: "Arbitrary Code Execution",
                },
              ].map((zeroday, idx) => (
                <div
                  key={idx}
                  className="bg-slate-800/50 rounded-lg p-5 border-2 border-red-500/30 hover:border-red-500/50 transition-all"
                >
                  <div className="flex items-start justify-between mb-4">
                    <div>
                      <div className="flex items-center space-x-3 mb-2">
                        <span className="text-lg font-bold text-white">
                          {zeroday.id}
                        </span>
                        {zeroday.exploited && (
                          <span className="px-2 py-1 bg-red-500/20 text-red-400 text-xs font-bold rounded animate-pulse">
                            ACTIVELY EXPLOITED
                          </span>
                        )}
                      </div>
                      <h3 className="text-base font-semibold text-white mb-2">
                        {zeroday.title}
                      </h3>
                    </div>
                    <div className="text-right">
                      <div className="text-3xl font-bold text-red-400 mb-1">
                        {zeroday.cvss}
                      </div>
                      <div className="text-xs text-slate-400">CVSS Score</div>
                    </div>
                  </div>

                  <div className="grid grid-cols-4 gap-4 mb-4">
                    <div>
                      <div className="text-xs text-slate-400 mb-1">Vendor</div>
                      <div className="text-sm text-white font-semibold">
                        {zeroday.vendor}
                      </div>
                    </div>
                    <div>
                      <div className="text-xs text-slate-400 mb-1">Product</div>
                      <div className="text-sm text-white font-semibold">
                        {zeroday.product}
                      </div>
                    </div>
                    <div>
                      <div className="text-xs text-slate-400 mb-1">
                        Discovered
                      </div>
                      <div className="text-sm text-white font-semibold">
                        {zeroday.discovered}
                      </div>
                    </div>
                    <div>
                      <div className="text-xs text-slate-400 mb-1">Impact</div>
                      <div className="text-sm text-red-400 font-semibold">
                        {zeroday.impact}
                      </div>
                    </div>
                  </div>

                  <div className="flex items-center justify-between">
                    <span
                      className={`px-3 py-1 rounded text-xs font-bold ${
                        zeroday.status === "Unpatched"
                          ? "bg-red-500/20 text-red-400"
                          : "bg-yellow-500/20 text-yellow-400"
                      }`}
                    >
                      {zeroday.status}
                    </span>
                    <div className="flex items-center space-x-2">
                      <ConfirmDialogButton
                        buttonLabel="Set Alert"
                        dialogTitle="Confirm Alert"
                        extraContent="Are you sure you want to set an alert for this vulnerability?"
                        onConfirm={() => console.log("Alert set")}
                        onCancel={() => console.log("Set alert canceled")}
                      />
                    </div>
                  </div>
                </div>
              ))}
            </CardContent>
          </Card>
        </TabsContent>

        {/* Analytics & Trends */}
        <TabsContent value="analytics" className="space-y-6">
          <div className="grid grid-cols-3 gap-6">
            <Card className="bg-slate-900/50 border-slate-700/50">
              <CardHeader>
                <CardTitle className="text-white">
                  Vulnerability Trends (6 Months)
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                {[
                  { month: "May", total: 2847, critical: 98, high: 456 },
                  { month: "Jun", total: 3012, critical: 112, high: 489 },
                  { month: "Jul", total: 3234, critical: 127, high: 523 },
                  { month: "Aug", total: 3456, critical: 134, high: 567 },
                  { month: "Sep", total: 3689, critical: 145, high: 612 },
                  { month: "Oct", total: 3847, critical: 156, high: 645 },
                ].map((data, idx) => (
                  <div key={idx} className="bg-slate-800/50 rounded-lg p-3">
                    <div className="flex items-center justify-between mb-2">
                      <span className="text-sm font-semibold text-white">
                        {data.month}
                      </span>
                      <span className="text-sm text-slate-400">
                        {data.total} total
                      </span>
                    </div>
                    <div className="grid grid-cols-2 gap-2 text-xs">
                      <div className="flex items-center justify-between">
                        <span className="text-slate-400">Critical:</span>
                        <span className="text-red-400 font-semibold">
                          {data.critical}
                        </span>
                      </div>
                      <div className="flex items-center justify-between">
                        <span className="text-slate-400">High:</span>
                        <span className="text-orange-400 font-semibold">
                          {data.high}
                        </span>
                      </div>
                    </div>
                  </div>
                ))}
              </CardContent>
            </Card>

            <Card className="bg-slate-900/50 border-slate-700/50">
              <CardHeader>
                <CardTitle className="text-white">
                  Top Affected Vendors
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                {[
                  { vendor: "Microsoft", vulns: 456, critical: 34 },
                  { vendor: "Google", vulns: 389, critical: 28 },
                  { vendor: "Apple", vulns: 312, critical: 23 },
                  { vendor: "Oracle", vulns: 289, critical: 19 },
                  { vendor: "Cisco", vulns: 267, critical: 21 },
                  { vendor: "Adobe", vulns: 234, critical: 17 },
                ].map((vendor, idx) => (
                  <div
                    key={idx}
                    className="flex items-center justify-between p-3 bg-slate-800/50 rounded-lg"
                  >
                    <div>
                      <div className="text-sm font-semibold text-white mb-1">
                        {vendor.vendor}
                      </div>
                      <div className="text-xs text-slate-400">
                        {vendor.vulns} vulnerabilities
                      </div>
                    </div>
                    <span className="px-2 py-1 bg-red-500/20 text-red-400 text-xs font-bold rounded">
                      {vendor.critical} critical
                    </span>
                  </div>
                ))}
              </CardContent>
            </Card>

            <Card className="bg-slate-900/50 border-slate-700/50">
              <CardHeader>
                <CardTitle className="text-white">CWE Distribution</CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                {[
                  { cwe: "CWE-79: XSS", count: 567, percentage: 15 },
                  { cwe: "CWE-89: SQL Injection", count: 445, percentage: 12 },
                  {
                    cwe: "CWE-78: OS Command Injection",
                    count: 389,
                    percentage: 10,
                  },
                  { cwe: "CWE-22: Path Traversal", count: 312, percentage: 8 },
                  {
                    cwe: "CWE-502: Deserialization",
                    count: 289,
                    percentage: 8,
                  },
                  { cwe: "CWE-287: Auth Issues", count: 267, percentage: 7 },
                ].map((cwe, idx) => (
                  <div key={idx}>
                    <div className="flex items-center justify-between mb-1">
                      <span className="text-xs text-slate-300">{cwe.cwe}</span>
                      <span className="text-sm font-semibold text-white">
                        {cwe.count}
                      </span>
                    </div>
                    <div className="w-full bg-slate-800 rounded-full h-2">
                      <div
                        className="bg-amber-500 h-2 rounded-full transition-all"
                        style={{ width: `${cwe.percentage}%` }}
                      />
                    </div>
                  </div>
                ))}
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        {/* Remediation Tracking */}
        <TabsContent value="remediation" className="space-y-6">
          <div className="grid grid-cols-2 gap-6">
            <Card className="bg-slate-900/50 border-slate-700/50">
              <CardHeader>
                <CardTitle className="text-white">
                  Patch Management Status
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                {[
                  {
                    status: "Patched",
                    count: 2847,
                    percentage: 74,
                    color: "green",
                  },
                  {
                    status: "Patch Available",
                    count: 567,
                    percentage: 15,
                    color: "yellow",
                  },
                  {
                    status: "Unpatched",
                    count: 345,
                    percentage: 9,
                    color: "orange",
                  },
                  {
                    status: "Won't Fix",
                    count: 88,
                    percentage: 2,
                    color: "red",
                  },
                ].map((item, idx) => (
                  <div key={idx} className="bg-slate-800/50 rounded-lg p-4">
                    <div className="flex items-center justify-between mb-3">
                      <span className="text-sm font-semibold text-white">
                        {item.status}
                      </span>
                      <span className="text-2xl font-bold text-white">
                        {item.count}
                      </span>
                    </div>
                    <div className="flex items-center space-x-3">
                      <div className="flex-1 bg-slate-700 rounded-full h-3">
                        <div
                          className={`bg-${item.color}-500 h-3 rounded-full transition-all`}
                          style={{ width: `${item.percentage}%` }}
                        />
                      </div>
                      <span className="text-sm font-semibold text-white">
                        {item.percentage}%
                      </span>
                    </div>
                  </div>
                ))}
              </CardContent>
            </Card>

            <Card className="bg-slate-900/50 border-slate-700/50">
              <CardHeader>
                <CardTitle className="text-white">
                  Remediation Metrics
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                {[
                  {
                    label: "Avg Time to Patch",
                    value: "8.3 days",
                    trend: "-2.1 days",
                  },
                  { label: "Critical Patch SLA", value: "96%", trend: "+4%" },
                  { label: "Patches This Month", value: "234", trend: "+23" },
                  { label: "Overdue Patches", value: "12", trend: "-8" },
                ].map((metric, idx) => (
                  <div
                    key={idx}
                    className="flex items-center justify-between p-3 bg-slate-800/50 rounded-lg"
                  >
                    <div>
                      <div className="text-xs text-slate-400 mb-1">
                        {metric.label}
                      </div>
                      <div className="text-2xl font-bold text-white">
                        {metric.value}
                      </div>
                    </div>
                    <span
                      className={`text-sm font-semibold ${
                        metric.trend.startsWith("+") &&
                        metric.label.includes("SLA")
                          ? "text-green-400"
                          : metric.trend.startsWith("-") &&
                            !metric.label.includes("SLA")
                          ? "text-green-400"
                          : "text-red-400"
                      }`}
                    >
                      {metric.trend}
                    </span>
                  </div>
                ))}
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        {/* Supply Chain CVEs */}
        <TabsContent value="supply-chain" className="space-y-6">
          <Card className="bg-slate-900/50 border-slate-700/50">
            <CardHeader>
              <CardTitle className="text-white">
                Third-Party Component Vulnerabilities
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              {[
                {
                  component: "Log4j",
                  version: "2.14.1",
                  cves: ["CVE-2021-44228", "CVE-2021-45046"],
                  severity: "Critical",
                  affected: 47,
                  status: "Upgrade Required",
                },
                {
                  component: "OpenSSL",
                  version: "1.1.1",
                  cves: ["CVE-2024-3456"],
                  severity: "High",
                  affected: 89,
                  status: "Patch Available",
                },
                {
                  component: "jQuery",
                  version: "3.4.1",
                  cves: ["CVE-2020-11022", "CVE-2020-11023"],
                  severity: "Medium",
                  affected: 123,
                  status: "Upgrade Recommended",
                },
              ].map((comp, idx) => (
                <div
                  key={idx}
                  className="bg-slate-800/50 rounded-lg p-5 border border-slate-700"
                >
                  <div className="flex items-start justify-between mb-4">
                    <div>
                      <h3 className="text-lg font-bold text-white mb-2">
                        {comp.component} {comp.version}
                      </h3>
                      <div className="flex items-center space-x-2">
                        {comp.cves.map((cve, i) => (
                          <span
                            key={i}
                            className="px-2 py-1 bg-amber-500/20 text-amber-400 text-xs font-mono rounded"
                          >
                            {cve}
                          </span>
                        ))}
                      </div>
                    </div>
                    <span
                      className={`px-3 py-1 rounded text-xs font-bold ${
                        comp.severity === "Critical"
                          ? "bg-red-500/20 text-red-400"
                          : comp.severity === "High"
                          ? "bg-orange-500/20 text-orange-400"
                          : "bg-yellow-500/20 text-yellow-400"
                      }`}
                    >
                      {comp.severity}
                    </span>
                  </div>

                  <div className="grid grid-cols-2 gap-4 mb-4">
                    <div>
                      <div className="text-xs text-slate-400 mb-1">
                        Affected Assets
                      </div>
                      <div className="text-2xl font-bold text-red-400">
                        {comp.affected}
                      </div>
                    </div>
                    <div>
                      <div className="text-xs text-slate-400 mb-1">Status</div>
                      <div className="text-sm text-white font-semibold">
                        {comp.status}
                      </div>
                    </div>
                  </div>

                  <button className="px-4 py-2 bg-amber-600 hover:bg-amber-700 text-white rounded-lg text-sm w-full">
                    View Affected Assets
                  </button>
                </div>
              ))}
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
};

export default VulnMatrix;
