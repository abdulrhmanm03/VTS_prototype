"use client";

import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Tabs, TabsList, TabsTrigger, TabsContent } from "@/components/ui/tabs";
import { Input } from "@/components/ui/input";
import {
  Search,
  Filter,
  Database,
  Sun,
  AlertCircle,
  TrendingUp,
  ShieldCheck,
} from "lucide-react";
import {
  ResponsiveContainer,
  PieChart,
  Pie,
  Cell,
  LineChart,
  Line,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
} from "recharts";

// Import tab components
import CVEDatabase from "@/components/vulnerabilities/CVEDatabase";
import ExploitIntelligence from "@/components/vulnerabilities/ExploitIntelligence";
import PatchManagement from "@/components/vulnerabilities/PatchManagement";
import RiskAssessment from "@/components/vulnerabilities/RiskAssessment";

const severityData = [
  { name: "Low", value: 51, color: "#4CAF50" },
  { name: "Medium", value: 26, color: "#FFC107" },
  { name: "High", value: 16, color: "#FF9800" },
  { name: "Critical", value: 7, color: "#F44336" },
];

const weeklyData = [
  { name: "Week 1", vulnerabilities: 25 },
  { name: "Week 2", vulnerabilities: 10 },
  { name: "Week 3", vulnerabilities: 14 },
  { name: "Week 4", vulnerabilities: 42 },
];

const COLORS = severityData.map((d) => d.color);

export default function VulnerabilitiesPage() {
  return (
    <div className="flex flex-col gap-6 p-6 min-h-screen text-white">
      {/* Header */}
      <div className="mb-6">
        <h1 className="text-4xl font-bold text-blue-400 drop-shadow-[0_0_12px_rgba(59,130,246,0.9)]">
          Vulnerabilities & Exploits
        </h1>
        <p className="ml-1 text-gray-400 text-lg">
          Track CVEs, exploits, and patch management across your environment
        </p>
      </div>

      {/* Stats Cards */}
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
        {[
          {
            title: "Total CVEs",
            value: "174",
            sub: "+12 new this week",
            color: "yellow-400",
            icon: Sun,
            gradient: "from-red-900/30 via-red-800/10",
            subColor: "text-green-500",
          },
          {
            title: "Critical Vulnerabilities",
            value: "12",
            sub: "Require immediate attention",
            color: "red-500",
            icon: AlertCircle,
            gradient: "from-red-900/30 via-red-800/10",
            subColor: "text-red-500",
          },
          {
            title: "Active Exploits",
            value: "23",
            sub: "8 in the wild",
            color: "purple-400",
            icon: TrendingUp,
            gradient: "from-purple-900/30 via-purple-800/10",
            subColor: "text-green-500",
          },
          {
            title: "Patch Coverage",
            value: "87%",
            sub: "+5% from last month",
            color: "green-400",
            icon: ShieldCheck,
            gradient: "from-green-900/30 via-green-800/10",
            subColor: "text-green-500",
          },
        ].map(
          ({ title, value, sub, color, icon: Icon, gradient, subColor }, i) => (
            <Card
              key={i}
              className={`relative border-none text-white overflow-hidden rounded-2xl bg-white/5 shadow-lg backdrop-blur-md hover:shadow-[0_0_30px_rgba(59,130,246,0.6)] transition-shadow duration-300`}
            >
              <div
                className={`absolute inset-0 bg-gradient-to-br ${gradient} to-transparent pointer-events-none`}
              />
              <div className="relative z-10">
                <CardHeader className="flex justify-between pb-2">
                  <CardTitle className="text-sm font-medium text-gray-400">
                    {title}
                  </CardTitle>
                  <Icon className={`h-8 w-8 text-${color} drop-shadow-md`} />
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold drop-shadow-lg">
                    {value}
                  </div>
                  <p className={`text-xs ${subColor}`}>{sub}</p>
                </CardContent>
              </div>
            </Card>
          )
        )}
      </div>

      {/* Charts */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* Severity Pie */}
        <Card className="relative border-none bg-white/5 shadow-lg backdrop-blur-md rounded-2xl overflow-hidden hover:shadow-[0_0_30px_rgba(59,130,246,0.6)] transition-shadow">
          <div className="absolute inset-0 bg-gradient-to-br from-blue-900/20 via-blue-800/10 to-transparent" />
          <CardHeader>
            <CardTitle className="text-lg font-medium">
              Vulnerability Severity
            </CardTitle>
            <p className="text-sm text-gray-400">Breakdown by severity</p>
          </CardHeader>
          <CardContent className="h-64 flex items-center justify-center">
            <ResponsiveContainer width="100%" height="100%">
              <PieChart>
                <Pie
                  data={severityData}
                  cx="50%"
                  cy="50%"
                  innerRadius={50}
                  outerRadius={80}
                  dataKey="value"
                  label={({ name, percent }) =>
                    `${name} ${(Number(percent) * 100).toFixed(0)}%`
                  }
                  labelLine={false}
                >
                  {severityData.map((entry, i) => (
                    <Cell key={i} fill={COLORS[i]} />
                  ))}
                </Pie>
                <Tooltip
                  contentStyle={{
                    backgroundColor: "#3A3A3A",
                    border: "none",
                    borderRadius: "4px",
                  }}
                  itemStyle={{ color: "#FFFFFF" }}
                />
              </PieChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>

        {/* Trend Line */}
        <Card className="relative border-none bg-white/5 shadow-lg backdrop-blur-md rounded-2xl overflow-hidden hover:shadow-[0_0_30px_rgba(59,130,246,0.6)] transition-shadow">
          <div className="absolute inset-0 bg-gradient-to-br from-purple-900/20 via-purple-800/10 to-transparent" />
          <CardHeader>
            <CardTitle className="text-lg font-medium">Weekly Trend</CardTitle>
            <p className="text-sm text-gray-400">Vulnerabilities over time</p>
          </CardHeader>
          <CardContent className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <LineChart data={weeklyData}>
                <CartesianGrid strokeDasharray="3 3" stroke="#2a2a2a" />
                <XAxis dataKey="name" stroke="#6B7280" />
                <YAxis stroke="#6B7280" />
                <Tooltip
                  contentStyle={{ backgroundColor: "#3A3A3A", border: "none" }}
                  itemStyle={{ color: "#FFFFFF" }}
                />
                <Line
                  type="monotone"
                  dataKey="vulnerabilities"
                  stroke="#BB86FC"
                  activeDot={{ r: 8 }}
                />
              </LineChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>
      </div>

      {/* Search and Actions */}
      <div className="flex items-center space-x-2">
        <div className="relative flex-1">
          <Search className="absolute left-2 top-2.5 h-4 w-4 text-gray-400" />
          <Input
            placeholder="Search CVEs, products, vendors..."
            className="pl-8 bg-white/5 text-white placeholder-gray-400 backdrop-blur-md"
          />
        </div>
        <Button
          variant="outline"
          size="icon"
          className="border-gray-700 text-white"
        >
          <Filter className="h-4 w-4" />
        </Button>
        <Button className="bg-blue-600 hover:bg-blue-700 text-black">
          <Database className="mr-2 h-4 w-4" />
          Sync CVE Database
        </Button>
      </div>

      {/* Tabs */}
      <Tabs defaultValue="cve-database" className="mt-6">
        <TabsList className="bg-white/5 rounded-2xl p-1 shadow-lg backdrop-blur-md">
          <TabsTrigger value="cve-database">CVE Database</TabsTrigger>
          <TabsTrigger value="exploit-intelligence">
            Exploit Intelligence
          </TabsTrigger>
          <TabsTrigger value="patch-management">Patch Management</TabsTrigger>
          <TabsTrigger value="risk-assessment">Risk Assessment</TabsTrigger>
        </TabsList>

        <TabsContent value="cve-database" className="mt-4">
          <CVEDatabase />
        </TabsContent>
        <TabsContent value="exploit-intelligence" className="mt-4">
          <ExploitIntelligence />
        </TabsContent>
        <TabsContent value="patch-management" className="mt-4">
          <PatchManagement />
        </TabsContent>
        <TabsContent value="risk-assessment" className="mt-4">
          <RiskAssessment />
        </TabsContent>
      </Tabs>
    </div>
  );
}
